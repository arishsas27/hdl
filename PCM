Pulse Code Modulation
import numpy as np
import matplotlib.pyplot as plt
# PCM Encoding Function
def pcm_encode(signal, quantization_levels):
    min_val, max_val = np.min(signal), np.max(signal)
    quantized_signal = np.round((signal - min_val) / (max_val - min_val) * (quantization_levels - 1))
    return quantized_signal.astype(int)
# PCM Decoding Function
def pcm_decode(encoded_signal, quantization_levels, min_val, max_val):
    decoded_signal = encoded_signal / (quantization_levels - 1) * (max_val - min_val) + min_val
    return decoded_signal
# Example signal
fs = 1000  # Sampling frequency
t = np.linspace(0, 1, fs)
original_signal = 0.5 * np.sin(2 * np.pi * 5 * t)  # 5 Hz sine wave
# PCM Process
quantization_levels = 16
encoded_signal = pcm_encode(original_signal, quantization_levels)
decoded_signal = pcm_decode(encoded_signal, quantization_levels, np.min(original_signal), np.max(original_signal))
# Plotting
plt.figure(figsize=(12, 8))
plt.subplot(3, 1, 1)
plt.plot(t, original_signal, label='Original Signal')
plt.title('Original Signal')
plt.grid(True)
plt.subplot(3, 1, 2)
plt.step(t, encoded_signal, label='PCM Modulated Signal', color='r')
plt.title('PCM Modulated Signal')
plt.grid(True)
plt.subplot(3, 1, 3)
plt.plot(t, decoded_signal, label='Demodulated Signal', color='g')
plt.title('PCM Demodulated Signal')
plt.grid(True)
plt.tight_layout()
plt.show()
